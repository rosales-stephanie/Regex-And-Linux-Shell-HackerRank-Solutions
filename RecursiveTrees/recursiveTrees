awk '
function makeTree(times, r, c, lenOfTree, matrix, right, newRow, newLenOfTree) {
    originalRow = r
    r = "" r
    c = "" c
    #print "\nC: " c " R: " r "\n"
    for (i = 0; i < lenOfTree; i++){
        matrix[r, c] = "1"
        r += 1
    }
    left = 0
    right = 0
    for (i = 0; i < lenOfTree; i++){
        left = c - (i+1)
        matrix[r, left] = "1"
        right  = c + (i+1)
        matrix[r, right] = "1"
        r += 1
        #print "\n" left " " right ": " times "\n"
    }
    times -= 1
    if (times > 0) {
        newRow = originalRow + (lenOfTree * 2)
        #print "Next Round: " newRow " " left " " right ":"
        newLenOfTree = lenOfTree / 2
        makeTree(times, newRow, left, newLenOfTree, matrix)
        #The left tree was perfect but everything was getting messed up
        #on the right side. It turns out that all variables are global so 
        #they were changing after the call to the left side returned. 
        #So! I had to make the variables local by passing them 
        #into the function AFTER the other function arguments.
        #print "Right: " right
        makeTree(times, newRow, right, newLenOfTree, matrix)
    }
}
BEGIN{
    ORS=""
    for (row = 0; row < 63; row++){
        for (col = 0; col < 100; col++){
            matrix[row, col] = "_"
        }
    }
}
{
    makeTree($0, 0, 50, 16, matrix)
    for (row = 62; row >= 0; row--){
        for (col = 99; col >= 0; col--){
            print matrix[row, col]
        }
        print "\n"
    }
}
'
